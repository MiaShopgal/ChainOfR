/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package chainofr

import kotlin.test.Test
import kotlin.test.assertContains
import kotlin.test.assertNotNull

class AppTest {
    private lateinit var currentHandler: Handler
    private lateinit var fanHandler: FanHandler
    private lateinit var spamHandler: SpamHandler
    private lateinit var mail: Mail

    @Test
    fun appHasAGreeting() {
        val classUnderTest = App()
        assertNotNull(classUnderTest.greeting, "app should have a greeting")
    }

    @Test
    fun `Given a valid source and validate it is the same`() {
        assert(true)
        println("Happy Ending")
    }

    @Test
    fun `Given a spam mail and confirmed it's been deleted`() {

        givenAMail("best buy")
        whenASpamHandlerIsReady()
        thenSpamMailBeenProcessed()

    }

    @Test
    fun `Given a Fan mail and confirmed it's been forawrd to CEO`() {
        givenAMail("big fan")
        whenAFanHandlerIsReady()
        thenFanMailBeenProcesssed()

    }

    @Test
    fun `Given a Spam mail and when a spam and a fan handler are ready`() {
        givenAMail("best buy")
        whenAFanHandlerIsReady()
        thenSpamMailBeenProcessed()

    }

    private fun thenFanMailBeenProcesssed() {
        val result = fanHandler.handleRequest(mail.title)
        assertContains(result, "CEO")
    }

    private fun whenAFanHandlerIsReady() {

        spamHandler = SpamHandler(mail.title)
        fanHandler = FanHandler(mail.title)
        fanHandler.next = spamHandler
        currentHandler = fanHandler

    }

    private fun thenSpamMailBeenProcessed() {

        val result = currentHandler.handleRequest(mail.title)

        assertContains(result, "deleting")
    }

    private fun whenASpamHandlerIsReady() {

        spamHandler = SpamHandler(mail.title)
        currentHandler = spamHandler

    }

    private fun givenAMail(title: String) {

        mail = Mail(title)

    }
}
